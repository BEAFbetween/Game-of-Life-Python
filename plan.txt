Cells can be defined as alive or dead (probably using 1 or 0).
A set of rules define how this changes over one time iteration.

RULES 
1. Any live cell with two or three live neighbours survives.
2. Any dead cell with three live neighbours becomes a live cell.
3. All other cells die.

PROCESS
1. Define an array of cells of size n (square for the moment). 
2. Define a time length for one iteration (e.g. delay 0.25 seconds before each update).
3. Assign the initial state of the array (which cells are initially alive or dead). 
4. Check the number of neighbours of each cell and decide whether it will be alive or dead after the next iteration. 
5. Update the array after one iteration. 
6. Rinse and repeat.

To accomplish this I will create a module that contains all the defined relevant functions such as checking the state of the cell, deciding its state after one iteration, and
changing the cell after one iteration. 

IMPORTANT NOTES
1. Using toroidal boundary conditions i.e. x and y wrap around.